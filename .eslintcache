[{"/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/reportWebVitals.js":"1","/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/App.js":"2","/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/index.js":"3","/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/components/QuoteMachine.js":"4"},{"size":362,"mtime":1606304055101,"results":"5","hashOfConfig":"6"},{"size":2264,"mtime":1606328659726,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1606308678177,"results":"8","hashOfConfig":"6"},{"size":1286,"mtime":1606328224330,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w0yn9c",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/reportWebVitals.js",[],"/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/App.js",["19"],"/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/index.js",[],["20","21"],"/home/doyle/Desktop/programmes/freecodecamp/randomQoutes/random-quote-app/src/components/QuoteMachine.js",[],{"ruleId":"22","severity":1,"message":"23","line":33,"column":13,"nodeType":"24","endLine":38,"endColumn":4},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]